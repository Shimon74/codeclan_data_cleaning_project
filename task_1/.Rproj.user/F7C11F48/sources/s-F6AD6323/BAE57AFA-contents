---
title: "R Notebook"
output: html_notebook
---

```{r}
library(CodeClanData)
library(tidyverse)

tidyverse_packages()
```

```{r}
tidyverse_update()
```

Look at some functions
```{r}
?mutate
?summarise
```

```{r}
group_by 
```

```{r}
alphabet <- tibble(alphabet = letters)
alphabet
```
Table in tibble
```{r}
xy_tibble <- tibble(x = 1:5, y = x*2)
xy_tibble


```

```{r}

list_tibble <- tibble(x = 1:3, y  = list(1:5, 1:10, 1:20))
list_tibble

```

loading in data example
```{r}
rescues_cat <- read_csv("data/edin_rescues.csv")
head(rescues_cat)
```

tidyverse will only print first 10 rows by default
```{r}
all_deaths


```


```{r}

dim(all_deaths)
```

```{r}
names(all_deaths)
```

```{r}
view(all_deaths)
```

```{r}
one_column <- select(all_deaths, book_of_death)
one_column

```

```{r}
select(all_deaths, book_of_death) %>% 
  is.na()

```

```{r}
deaths <- select(all_deaths, name, allegiances, gender, nobility, year_of_death)
names(deaths)

```



```{r}

lannisters <- filter(all_deaths, allegiances == "Lannister")
lannisters

```


```{r}
lannisters <- filter(all_deaths, allegiances == "Lannister", gender ==0)
lannisters

```


```{r}
dead_by_299 <- filter(all_deaths, year_of_death <= 299)
dead_by_299
```



```{r}
not_lannisters_females <- filter(all_deaths, allegiances != "Lannister", gender == 0)
not_lannisters_females


```


```{r}

arrange(all_deaths, gender) %>%
  select(name, gender)

```

```{r}
arrange(all_deaths, desc(gender)) %>%
  select(name, gender)

```

```{r}
arrange(all_deaths, desc(gender), desc(nobility)) %>%
  select(name, gender)

```


```{r}

arrange(all_deaths, book_of_death)
```

```{r}
arrange(all_deaths, allegiances, book_intro_chapter)
```

```{r}

arrange(all_deaths, desc(year_of_death))
```

```{r}

deaths_year <- mutate(all_deaths, year_survived = year_of_death - 298)

deaths_year %>% select(year_of_death, year_survived)
head(deaths_year)

```


```{r}
head(deaths_year)


```


```{r}
books <- select(all_deaths, book1_GoT, book2_CoK, book3_SoS, book4_FfC, book5_DwD)
books



```

```{r}
char_books <- mutate_all(books, as.character)
char_books
```

```{r}

char_books2 <- mutate_at(all_deaths,
                         c("book1_GoT", "book2_CoK", "book3_SoS", "book4_FfC", "book5_DwD"), as.character)
char_books2

```


```{r}
if_books <- mutate_if(all_deaths, 
                      is.double,
                      as.character)
if_books
```

TASK
```{r}
dbl_to_integer <- mutate_if(all_deaths,
                            is.double,
                            as.integer)
dbl_to_integer

```

```{r}

mutate(all_deaths, intro_chapter_logical = if_else(is.na(book_intro_chapter), FALSE, TRUE))




```

```{r}
test <- mutate(all_deaths, 
       intro_logical = is.na(book_intro_chapter))
test
```


```{r}
nobility_logic_ <- mutate_at(all_deaths, "nobility", as.logical)
nobility_logic_

```

```{r}

deaths_grouped <- all_deaths %>%
  select(name,allegiances, year_of_death) %>%
  group_by(allegiances)
deaths_grouped

```


```{r}
summarise(deaths_grouped, 
          count = n() )

```


```{r}
grouped_alleg <- group_by(all_deaths, allegiances, nobility)
grouped_alleg


```


```{r}

noble_percentage <- all_deaths %>%
  select(name, allegiances, nobility) %>%
mutate(percent = (sum(allegiances)/length(allegiances))*100 ) %>%
  group_by(allegiances)

```
TASK
```{r}

noble_percentage <- all_deaths %>%
  select(name, allegiances, nobility) %>%
  filter(nobility ==1) %>%
  group_by(allegiances)%>%
summarise(total_count = n() ) %>%
  mutate(percent = total_count/ sum(total_count) * 100) %>%
  arrange(desc(percent))

noble_percentage
```



```{r}





```

